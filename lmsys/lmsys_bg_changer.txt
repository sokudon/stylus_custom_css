javascript:(function() {
  var cssContent =`
:root {
    --background: rgba(0, 0, 0, 0);
    --text-primary: rgba(254, 254, 254, .97);
    --text-secondary: rgb(255, 251, 251);
    --surface-primary: rgba(0, 0, 0, 0);
    --surface-secondary: 2 rgba(0, 0, 0, 0);
    --sidebar-background: rgba(0, 0, 0, 0);
    --sidebar-foreground: rgba(0, 0, 0, 0);

    --interactive-active: rgba(0, 0, 0, 0);
    --interactive-normal: rgba(0, 0, 0, 0);
}
.bg-surface-primary {
    background-color: rgba(0, 0, 0, .47);
}
body {

    /* 背景画像のURLを指定 */
    background-size: cover;
    /* 画像を画面全体にフィットさせる */
    background-position: center;
    /* 画像を中央に配置 */
    background-repeat: no-repeat;
    /* 画像の繰り返しを防止 */
    background-attachment: fixed;
    /* スクロールしても背景を固定 */
}

/* Overview内のテーブルとそのコンテナを透過 */
.leaderboard-container,
.table-container,
table,
table th,
table td {
    background: var(--background) !important;
    /* 完全透過、特異性を高める */
    border: none;
    /* 枠線を削除 */
}
/* テーブルのテキストの視認性を確保 */
table th,
table td {
    color: rgb(7, 230, 238);
    /* テキストをカスタムプロパティで設定 */
}

/* ヘッダーやナビゲーションの背景を調整 */
header,
nav,
.navbar {
    background: var(--background) !important;
    /* 半透明の背景 */
    color: rgb(247, 247, 247);
}

/* ボタンやリンクのスタイルをカスタムプロパティで調整 */
a,
button {
    background: var(--background) !important;
    color: hsl(var(--interactive-on-cta));
    border-radius: 4px;
}

a:hover,
button:hover {
    background: hsl(var(--interactive-cta-hover), 0.27);
}

/* 競合する背景スタイルを上書き */
.table-container,
.leaderboard-container,
table {
    background-color: transparent !important;
    /* 強制的に透過 */
}

`;
    
    
    var s = document.createElement("style");
  s.textContent = cssContent;
  document.head.appendChild(s);

  var p = document.createElement("div");
  p.style.cssText = `position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);
  .gradio-container {
  background:var(--b);}
  padding:20px;border:1px solid #ccc;z-index:10000;width:90%;max-width:300px`;
  p.className = "fb";

  var h = document.createElement("div");
  h.className = "ph";
  var textNode = document.createTextNode("LMSYS_BG_CHANGER by ");
  var link = document.createElement("a");
  link.href = "https://github.com/sokudon";
  link.textContent = "strmdn";
  h.appendChild(textNode);
  h.appendChild(link);

  var u = document.createElement("input");
  u.type = "text";
  u.placeholder = "画像URL";
  u.style.cssText = "width:100%;margin-bottom:10px;display:block;background:var(--n);color:#fff";
  u.className = "tb";
  u.onmouseover = function(){this.style.background="var(--h)"};
  u.onmouseout = function(){this.style.background="var(--n)"};

  var f = document.createElement("input");
  f.type = "file";
  f.accept = "image/*";
  f.style.cssText = "width:100%;margin-bottom:10px;display:block;background:var(--n);color:#fff";
  f.className = "tb";

  var b = document.createElement("button");
  b.textContent = "変換";
  b.style.cssText = "width:100%;background:var(--f);color:#000";
  b.className = "tb bg";
  b.onclick = function(){
    document.body.removeChild(p);
    if(f.files && f.files[0]){
      var file = f.files[0];
      if(file.size > 5*1024*1024){
        alert("ファイルサイズが大きすぎます（5MB以下にしてください）。");
        document.body.appendChild(p);
        return;
      }
      var r = new FileReader();
      var t = setTimeout(function(){alert("ファイル読み込みがタイムアウトしました。");},10000);
      r.onload = function(e){
        clearTimeout(t);
        var d = e.target.result;
        document.body.style.background = `url(${d})`;
      };
      r.onerror = function(){
        clearTimeout(t);
        alert("ファイルの読み込みに失敗しました。");
      };
      r.readAsDataURL(file);
    } else if(u.value.trim()){
      var i = new Image();
      i.crossOrigin = "anonymous";
      i.onload = function(){
        var c = document.createElement("canvas");
        c.width = i.width;
        c.height = i.height;
        var x = c.getContext("2d");
        x.drawImage(i,0,0);
        var d = c.toDataURL("image/png");
        document.body.style.background = `url(${d})`;
      };
      i.onerror = function(){
        document.body.style.background = `url(${u.value.trim()})`;
      };
      i.src = u.value.trim();
    } else {
      alert("URLかファイルを指定してください！");
      document.body.appendChild(p);
    }
  };

  p.appendChild(h);
  p.appendChild(u);
  p.appendChild(f);
  p.appendChild(b);
  document.body.appendChild(p);
  u.focus();
})();