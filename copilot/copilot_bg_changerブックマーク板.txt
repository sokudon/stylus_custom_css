javascript:(function() {
  var cssContent = `
    body {
      background: none !important;
      background-size: cover !important;
      background-color: transparent !important;
      font-family: Ginto, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", Segoe UI Symbol, "Noto Color Emoji";
      color: #50e7d87a !important;
    }
    main, main div, .absolute.size-full, .bg-gradient-chat-light, .dark\\:bg-midnight-850, .dark\\:bg-none {
      background: transparent !important;
      background-color: transparent !important;
    }
    .bg-spot-peach-300\\/50, .dark\\:bg-midnight-750 {
      background-color: rgba(255, 192, 203, 0.3) !important;
    }
    .relative.overflow-hidden.backdrop-blur-2xl {
      background-color: rgba(255, 255, 255, 0.2) !important;
      backdrop-filter: blur(10px) !important;
    }
    .relative.overflow-hidden.backdrop-blur-2xl::before, .relative.overflow-hidden.backdrop-blur-2xl::after {
      background-color: rgba(255, 255, 255, 0.1) !important;
      opacity: 0.5 !important;
    }
    .bg-white\\/90, .dark\\:bg-midnight-900\\/80, .bg-white\\/70, .dark\\:bg-slate-450\\/30, .bg-transparent, .shadow-composer-input {
      background-color: rgba(255, 255, 255, 0.2) !important;
    }
    button.bg-white\\/70, button.dark\\:bg-slate-450\\/30, button.bg-transparent {
      background-color: rgba(255, 255, 255, 0.2) !important;
    }
    textarea#userInput {
      background-color: rgba(255, 255, 255, 0.1) !important;
    }
    .text-foreground-800, .text-black, .dark\\:text-white, .font-ligatures-none {
      color: #ffffff !important;
    }
    body::before {
      content: "";
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.4) !important;
      z-index: -1;
    }
  `;
  var s = document.createElement("style");
  s.id = "bgStyle";
  s.textContent = cssContent;
  document.head.appendChild(s);

  var p = document.createElement("div");
  p.style.cssText = "position:fixed;top:50%;left:50%;transform:translate(-50%,-50%);background:var(--b);padding:20px;border:1px solid #ccc;z-index:10000;width:90%;max-width:300px";
  p.className = "fb";

  var h = document.createElement("div");
  h.className = "ph";
  h.appendChild(document.createTextNode("COPILOT_BG_CHANGER by "));
  var l = document.createElement("a");
  l.href = "https://github.com/sokudon";
  l.textContent = "strmdn";
  h.appendChild(l);

  var u = document.createElement("input");
  u.type = "text";
  u.placeholder = "画像URL";
  u.style.cssText = "width:100%;margin-bottom:10px;display:block;background:var(--n);color:#fff";
  u.className = "tb";
  u.onmouseover = function(){this.style.background="var(--h)";};
  u.onmouseout = function(){this.style.background="var(--n)";};

  var f = document.createElement("input");
  f.type = "file";
  f.accept = "image/*";
  f.style.cssText = "width:100%;margin-bottom:10px;display:block;background:var(--n);color:#fff";
  f.className = "tb";

  var b = document.createElement("button");
  b.textContent = "変換";
  b.style.cssText = "width:100%;background:var(--f);color:#fff";
  b.className = "tb bg";
  b.onclick = function() {
    document.body.removeChild(p);
    var newUrl = "";
    if (f.files && f.files[0]) {
      var file = f.files[0];
      if (file.size > 5 * 1024 * 1024) {
        alert("ファイルサイズが大きすぎます（5MB以下にしてください）。");
        document.body.appendChild(p);
        return;
      }
      var r = new FileReader();
      var t = setTimeout(function(){alert("ファイル読み込みがタイムアウトしました。");}, 10000);
      r.onload = function(e) {
        clearTimeout(t);
        newUrl = e.target.result;
        updateBg(newUrl);
      };
      r.onerror = function() {
        clearTimeout(t);
        alert("ファイルの読み込みに失敗しました。");
      };
      r.readAsDataURL(file);
    } else if (u.value.trim()) {
      newUrl = u.value.trim();
      var i = new Image();
      i.crossOrigin = "anonymous";
      i.onload = function() {
        var c = document.createElement("canvas");
        c.width = i.width;
        c.height = i.height;
        c.getContext("2d").drawImage(i, 0, 0);
        newUrl = c.toDataURL("image/png");
        updateBg(newUrl);
      };
      i.onerror = function() {
        updateBg(newUrl);
      };
      i.src = newUrl;
    } else {
      alert("URLかファイルを指定してください！");
      document.body.appendChild(p);
    }
  };

  function updateBg(url) {
    var s = document.getElementById("bgStyle");
    var updatedCss = cssContent.replace(
      /background:\s*none\s*!important;/,
      `background: url(${url}) no-repeat center center fixed !important;`
    );
    s.textContent = updatedCss;
  }

  p.appendChild(h);
  p.appendChild(u);
  p.appendChild(f);
  p.appendChild(b);
  document.body.appendChild(p);
  u.focus();
})();